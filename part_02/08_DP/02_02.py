#최소 연산 횟수: 큰수부터 해결
#특정 조건에서 계산이 반복 -> 재귀
#1차시도: 5로 나눠지면 5로 나누고, 3으로 나눠짐면 3으로 나누고 2로 나눠지면 2로 나누고 아니면 1빼고 조건문으로 했음 -> 생각해보니까 최소 연산 횟수가 나오지않음..
#풀이시간 14m
# 최대한 5로 나눠지도록... 3을 이용해서 5로 나눠지면 3으로 나누고, 2로 나눠서 5의 배수가 되면 2로 나누고 아니면 1을 빼고 (재귀)

n = int(input())
d = [0] * (n+1)
#d[i] = i에서 1만들기 위한 최소 연산 횟수
d[1] = 0
d[2] = 1
d[3] = 1
d[4] = 2
d[5] = 1

for i in range(6, n+1):
  r1,r2,r3 = n, n, n #loop돌 때마다 값 초기화 해서 min값에 영향을 미치지 않도록...
  if i % 5 == 0:
    r1 = min(d[i-1], d[i//5]) + 1 # i - 1과 i // 5 연산횟수 비교해서 min값이 1 더하기
    #1더하는 이유는 d[i-1]연산 횟수에서 1빼기 연산, d[i//5]연산 횟수에서 5 나누기 연산이 추가되므로 1을 더해줘야함
  if i % 3 == 0:
    r2 = min(d[i-1], d[i//3]) + 1
  if i % 2 == 0:
    r3 = min(d[i-1], d[i//2]) + 1
    
  d[i] = min([r1, r2, r3])
print(d[n])